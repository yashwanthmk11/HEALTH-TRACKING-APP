{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YASHWANTH\\\\HEALTH-TRACKING-APP\\\\client\\\\src\\\\components\\\\NewEntryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../components/NewEntryForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEntryForm = ({\n  addMetric\n}) => {\n  _s();\n  const [date, setDate] = useState('');\n  const [temperature, setTemperature] = useState('');\n  const [isCelsius, setIsCelsius] = useState(false); // Celsius/Fahrenheit toggle\n  const [systolic, setSystolic] = useState('');\n  const [diastolic, setDiastolic] = useState('');\n  const [heartRate, setHeartRate] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const tempInFahrenheit = isCelsius ? temperature * 9 / 5 + 32 : temperature;\n    const newMetric = {\n      id: uuidv4(),\n      date,\n      temperature: tempInFahrenheit,\n      // Store temperature in Fahrenheit\n      bloodPressure: {\n        systolic,\n        diastolic\n      },\n      heartRate\n    };\n    addMetric(newMetric);\n    // Reset form\n    setDate('');\n    setTemperature('');\n    setSystolic('');\n    setDiastolic('');\n    setHeartRate('');\n  };\n  const toggleTemperatureUnit = () => {\n    setIsCelsius(!isCelsius);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"new-entry-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: isCelsius ? \"Body Temperature (°C)\" : \"Body Temperature (°F)\",\n      value: temperature,\n      onChange: e => setTemperature(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: toggleTemperatureUnit,\n      children: isCelsius ? \"Switch to °F\" : \"Switch to °C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Systolic (mmHg)\",\n      value: systolic,\n      onChange: e => setSystolic(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Diastolic (mmHg)\",\n      value: diastolic,\n      onChange: e => setDiastolic(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Heart Rate (bpm)\",\n      value: heartRate,\n      onChange: e => setHeartRate(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NewEntryForm, \"c9gvxxyZiT24G4pujwWQQlPr6Eg=\");\n_c = NewEntryForm;\nexport default NewEntryForm;\nvar _c;\n$RefreshReg$(_c, \"NewEntryForm\");","map":{"version":3,"names":["React","useState","v4","uuidv4","jsxDEV","_jsxDEV","NewEntryForm","addMetric","_s","date","setDate","temperature","setTemperature","isCelsius","setIsCelsius","systolic","setSystolic","diastolic","setDiastolic","heartRate","setHeartRate","handleSubmit","e","preventDefault","tempInFahrenheit","newMetric","id","bloodPressure","toggleTemperatureUnit","onSubmit","className","children","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/YASHWANTH/HEALTH-TRACKING-APP/client/src/components/NewEntryForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport '../components/NewEntryForm.css';\r\n\r\nconst NewEntryForm = ({ addMetric }) => {\r\n  const [date, setDate] = useState('');\r\n  const [temperature, setTemperature] = useState('');\r\n  const [isCelsius, setIsCelsius] = useState(false); // Celsius/Fahrenheit toggle\r\n  const [systolic, setSystolic] = useState('');\r\n  const [diastolic, setDiastolic] = useState('');\r\n  const [heartRate, setHeartRate] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const tempInFahrenheit = isCelsius ? (temperature * 9/5) + 32 : temperature;\r\n\r\n    const newMetric = {\r\n      id: uuidv4(),\r\n      date,\r\n      temperature: tempInFahrenheit, // Store temperature in Fahrenheit\r\n      bloodPressure: {\r\n        systolic,\r\n        diastolic,\r\n      },\r\n      heartRate,\r\n    };\r\n\r\n    addMetric(newMetric);\r\n    // Reset form\r\n    setDate('');\r\n    setTemperature('');\r\n    setSystolic('');\r\n    setDiastolic('');\r\n    setHeartRate('');\r\n  };\r\n\r\n  const toggleTemperatureUnit = () => {\r\n    setIsCelsius(!isCelsius);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"new-entry-form\">\r\n      <input\r\n        type=\"date\"\r\n        value={date}\r\n        onChange={(e) => setDate(e.target.value)}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder={isCelsius ? \"Body Temperature (°C)\" : \"Body Temperature (°F)\"}\r\n        value={temperature}\r\n        onChange={(e) => setTemperature(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"button\" onClick={toggleTemperatureUnit}>\r\n        {isCelsius ? \"Switch to °F\" : \"Switch to °C\"}\r\n      </button>\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Systolic (mmHg)\"\r\n        value={systolic}\r\n        onChange={(e) => setSystolic(e.target.value)}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Diastolic (mmHg)\"\r\n        value={diastolic}\r\n        onChange={(e) => setDiastolic(e.target.value)}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Heart Rate (bpm)\"\r\n        value={heartRate}\r\n        onChange={(e) => setHeartRate(e.target.value)}\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\">Add Entry</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewEntryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}